/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UtsPbo;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

public class buku extends javax.swing.JFrame {

    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<Buku_1> dataCrud = new ArrayList();
    
    private int masukkanData(Connection conn, String isbn, String judulbuku, String tahunterbit, String penerbit) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("INSERT INTO BUKU (isbn, judul_buku, tahun_terbit, penerbit) VALUES(?,?,?,?)");
        pst.setString(1, isbn);
        pst.setString(2, judulbuku);
        pst.setString(3, tahunterbit);
        pst.setString(4, penerbit);
        return pst.executeUpdate();
    }
    
    private int editData(Connection conn, String isbn, String judulbuku, String tahunterbit, String penerbit) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("UPDATE BUKU set judul_buku = ?, tahun_terbit = ?, penerbit = ? where isbn = ? ");
        pst.setString(4, isbn);
        pst.setString(1, judulbuku);
        pst.setString(2, tahunterbit);
        pst.setString(3, penerbit);
        return pst.executeUpdate();
    }
    
    private int hapusData(Connection conn, String isbn) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("DELETE From BUKU where isbn = ? ");
        pst.setString(1, isbn);
        return pst.executeUpdate();
    }
    
    private void Tampil() {
        DefaultTableModel tbl1 = (DefaultTableModel) jTableBuku.getModel();
        tbl1.setRowCount(0);
        // awal persistence
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("UTSFSHPU");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
        
        CriteriaBuilder cb = em.getCriteriaBuilder();
        CriteriaQuery<Buku_1> cq = cb.createQuery(Buku_1.class);

        Root<Buku_1> bok = cq.from(Buku_1.class);

        cq.select(bok.get("isbn"));

        CriteriaQuery<Buku_1> select = cq.select(bok);
        TypedQuery<Buku_1> q = em.createQuery(select);
        List<Buku_1> list = q.getResultList();

        for (Buku_1 data : list) {
            Object[] baris = new Object[4];
            baris[0] = data.getIsbn().trim();
            baris[1] = data.getJudulBuku().trim();
            baris[2] = data.getTahunTerbit().trim();
            baris[3] = data.getPenerbit().trim();

            tbl1.addRow(baris);
        }

        em.getTransaction().commit();
        em.close();
        emf.close();    
        jTextFieldIsbn.setText("");
        jTextFieldJudulbuku.setText("");
        jTextFieldTahunterbit.setText("");
        jTextFieldPenerbit.setText("");
    }
    
    public buku() {
        try {
            initComponents();
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Crud", "postgres", "uinsa");
            Tampil();
        } catch (SQLException ex) {
            Logger.getLogger(CrudPOJO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelIsbn = new javax.swing.JLabel();
        jLabelJudulbuku = new javax.swing.JLabel();
        jLabelTahunterbit = new javax.swing.JLabel();
        jLabelPenerbit = new javax.swing.JLabel();
        jTextFieldIsbn = new javax.swing.JTextField();
        jTextFieldJudulbuku = new javax.swing.JTextField();
        jTextFieldTahunterbit = new javax.swing.JTextField();
        jTextFieldPenerbit = new javax.swing.JTextField();
        jLabelGudangbuku = new javax.swing.JLabel();
        jScrollPaneTampil = new javax.swing.JScrollPane();
        jTableBuku = new javax.swing.JTable();
        jButtonInsert = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonPrint = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelIsbn.setText("ISBN");

        jLabelJudulbuku.setText("Judul Buku");

        jLabelTahunterbit.setText("Tahun Terbit");

        jLabelPenerbit.setText("Penerbit");

        jTextFieldIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIsbnActionPerformed(evt);
            }
        });

        jTextFieldJudulbuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJudulbukuActionPerformed(evt);
            }
        });

        jTextFieldTahunterbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTahunterbitActionPerformed(evt);
            }
        });

        jTextFieldPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPenerbitActionPerformed(evt);
            }
        });

        jLabelGudangbuku.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabelGudangbuku.setText("GUDANG BUKU");

        jScrollPaneTampil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPaneTampilMouseClicked(evt);
            }
        });

        jTableBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Judul Buku", "Tahun Terbit", "Penerbit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBukuMouseClicked(evt);
            }
        });
        jScrollPaneTampil.setViewportView(jTableBuku);

        jButtonInsert.setText("Insert");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonPrint.setText("Print");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelGudangbuku)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelTahunterbit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelPenerbit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelJudulbuku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelIsbn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldIsbn)
                                .addComponent(jTextFieldJudulbuku)
                                .addComponent(jTextFieldTahunterbit)
                                .addComponent(jTextFieldPenerbit))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDelete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTampil, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelGudangbuku, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPaneTampil, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelIsbn)
                            .addComponent(jTextFieldIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelJudulbuku)
                            .addComponent(jTextFieldJudulbuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTahunterbit)
                            .addComponent(jTextFieldTahunterbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelPenerbit)
                            .addComponent(jTextFieldPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonInsert)
                            .addComponent(jButtonEdit)
                            .addComponent(jButtonPrint)
                            .addComponent(jButtonDelete))
                        .addGap(84, 84, 84))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        String isbn = jTextFieldIsbn.getText().trim();
        String judulbuku = jTextFieldJudulbuku.getText().trim();
        String tahunterbit = jTextFieldTahunterbit.getText().trim();
        String penerbit = jTextFieldPenerbit.getText().trim();
        // awal persistence
        EntityManager em;
        em = Persistence.createEntityManagerFactory("UTSFSHPU").createEntityManager();
        em.getTransaction().begin();
        Buku_1 m=em.find(Buku_1.class,isbn);
        m.setIsbn(isbn);
        m.setJudulBuku(judulbuku);
        m.setTahunTerbit(tahunterbit);
        m.setPenerbit(penerbit);
        em.persist(m);
        em.getTransaction().commit();
        // akhir persistence
        Tampil();
        jTextFieldIsbn.setText("");
        jTextFieldJudulbuku.setText(""); 
        jTextFieldTahunterbit.setText("");
        jTextFieldPenerbit.setText("");
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jTextFieldIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIsbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIsbnActionPerformed

    private void jTextFieldJudulbukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJudulbukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJudulbukuActionPerformed

    private void jTextFieldTahunterbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTahunterbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTahunterbitActionPerformed

    private void jTextFieldPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPenerbitActionPerformed
        // TODO add your handling code here:
        String isbn = jTextFieldIsbn.getText().trim();
        String judulbuku = jTextFieldJudulbuku.getText();
        String tahunterbit = jTextFieldTahunterbit.getText();
        String penerbit = jTextFieldPenerbit.getText();
        if (!isbn.isEmpty() && !judulbuku.isEmpty() && !tahunterbit.isEmpty() && !penerbit.isEmpty()) {

            try {
                // TODO add your handling code here:
                Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Crud", "postgres", "uinsa");
                int k = masukkanData(conn, isbn, judulbuku, tahunterbit, penerbit);
                if (k > 0) {
                    Tampil();
                    this.peringatan("Simpan Berhasil");
                } else {
                    this.peringatan("Simpan Gagal");
                }
            } catch (SQLException ex) {
                Logger.getLogger(CrudPOJO.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.peringatan("Input Data Mahasiswa Gagal");
        }
        jTextFieldIsbn.setText("");
        jTextFieldJudulbuku.setText("");
        jTextFieldTahunterbit.setText("");
        jTextFieldPenerbit.setText("");
    }//GEN-LAST:event_jTextFieldPenerbitActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        // TODO add your handling code here:
        String isbn = jTextFieldIsbn.getText().trim();
        String judulbuku = jTextFieldJudulbuku.getText().trim();
        String tahunterbit = jTextFieldTahunterbit.getText().trim();
        String penerbit = jTextFieldPenerbit.getText().trim();
            //awal persistence
        EntityManager entityManager;
        entityManager = Persistence.createEntityManagerFactory("UTSFSHPU").createEntityManager();
        entityManager.getTransaction().begin();
        Buku_1 m = new Buku_1();
        m.setIsbn(isbn);
        m.setJudulBuku(judulbuku);
        m.setTahunTerbit(tahunterbit);
        m.setPenerbit(penerbit);
        entityManager.persist(m);
        entityManager.getTransaction().commit();
            // akhir persistence
            Tampil();
        jTextFieldIsbn.setText("");
        jTextFieldJudulbuku.setText("");
        jTextFieldTahunterbit.setText("");
        jTextFieldPenerbit.setText("");
        
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        // TODO add your handling code here
        EntityManager em;
        em = Persistence.createEntityManagerFactory("UTSFSHPU").createEntityManager();
        em.getTransaction().begin();
        
        CriteriaBuilder cb =em.getCriteriaBuilder();
        CriteriaQuery<Buku_1> cq = cb.createQuery(Buku_1.class);
        Root<Buku_1> bok = cq.from(Buku_1.class);
        cq.select(bok);
        
        TypedQuery<Buku_1> q = em.createQuery(cq);
        Query query = em.createQuery("SELECT b FROM Buku_1 b");
        Collection<?> result = null;
        
        JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(result);
        
        try {
        Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Crud", "postgres", "uinsa");
        String x = "src/UtsPbo/report1.jasper";
        JasperPrint print = JasperFillManager.fillReport(x, null, conn);
        JasperViewer jv = new JasperViewer(print, false);
        jv.setVisible(true);
        } catch (SQLException | JRException ex) {
            Logger.getLogger(CrudPOJO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        String isbn = jTextFieldIsbn.getText().trim();
        //awal persistence
        EntityManagerFactory emf=Persistence.createEntityManagerFactory("UTSFSHPU");
        EntityManager em=emf.createEntityManager();
        em.getTransaction().begin();
        Buku_1 s=em.find(Buku_1.class,isbn);
        em.remove(s);
        em.getTransaction().commit();
        // akhir persistence
        Tampil();
        jTextFieldIsbn.setText("");
        jTextFieldJudulbuku.setText("");
        jTextFieldTahunterbit.setText("");
        jTextFieldPenerbit.setText("");
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jScrollPaneTampilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneTampilMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPaneTampilMouseClicked

    private void jTableBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBukuMouseClicked
        // TODO add your handling code here:
        int row = jTableBuku.getSelectedRow();
        jTextFieldIsbn.setText(jTableBuku.getValueAt(row, 0).toString());
        jTextFieldJudulbuku.setText(jTableBuku.getValueAt(row, 1).toString());
        jTextFieldTahunterbit.setText(jTableBuku.getValueAt(row, 2).toString());
        jTextFieldPenerbit.setText(jTableBuku.getValueAt(row, 3).toString());
    }//GEN-LAST:event_jTableBukuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new buku().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JLabel jLabelGudangbuku;
    private javax.swing.JLabel jLabelIsbn;
    private javax.swing.JLabel jLabelJudulbuku;
    private javax.swing.JLabel jLabelPenerbit;
    private javax.swing.JLabel jLabelTahunterbit;
    private javax.swing.JScrollPane jScrollPaneTampil;
    private javax.swing.JTable jTableBuku;
    private javax.swing.JTextField jTextFieldIsbn;
    private javax.swing.JTextField jTextFieldJudulbuku;
    private javax.swing.JTextField jTextFieldPenerbit;
    private javax.swing.JTextField jTextFieldTahunterbit;
    // End of variables declaration//GEN-END:variables

}
